sim-outorder: SimpleScalar/PISA Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 128
Number of Virtual Registers: 32
Number of Physical Registers: 128
Datapath Width: 64
Total Power Consumption: 88.3705
Branch Predictor Power Consumption: 4.52313  (5.24%)
 branch target buffer power (W): 4.16837
 local predict power (W): 0.0879711
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.616985  (0.714%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0447235
 RAT bitline_power (W): 0.431848
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 9.27827  (10.7%)
 tagdrive (W): 0.955002
 tagmatch (W): 0.427955
 Selection Logic (W): 0.115427
 decode_power (W): 0.543666
 wordline_power (W): 0.0844643
 bitline_power (W): 7.15176
Load/Store Queue Power Consumption: 1.99355  (2.31%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 1.41254
Arch. Register File Power Consumption: 3.57247  (4.14%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 5.42703  (6.28%)
Total Clock Power: 28.8231  (33.4%)
Int ALU Power: 4.66013  (5.4%)
FP ALU Power: 14.281  (16.5%)
Instruction Cache Power Consumption: 2.55583  (2.96%)
 decode_power (W): 0.724888
 wordline_power (W): 0.057312
 bitline_power (W): 1.14691
 senseamp_power (W): 0.192
 tagarray_power (W): 0.434717
Itlb_power (W): 0.27086 (0.314%)
Data Cache Power Consumption: 5.21484  (6.04%)
 decode_power (W): 0.651055
 wordline_power (W): 0.196735
 bitline_power (W): 2.71235
 senseamp_power (W): 0.768
 tagarray_power (W): 0.8867
Dtlb_power (W): 0.927016 (1.07%)
Level 2 Cache Power Consumption: 4.22625 (4.89%)
 decode_power (W): 0.41817
 wordline_power (W): 0.0430878
 bitline_power (W): 3.0244
 senseamp_power (W): 0.192
 tagarray_power (W): 0.548589
sim: command line: /homes/phjk/simplesim-wattch/sim-outorder -ruu:size 128 -fetch:ifqsize 1 -bpred nottaken ./tltree-ss 32 32 3 /tmp/bucky-32x32x3.raw 

sim: simulation started @ Tue Feb 14 17:48:35 2017, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim           <null> # redirect simulator output to file (non-interactive only)
# -redir:prog          <null> # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-max:inst                   0 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              1 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred               nottaken # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                 128 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:128:32:4:l # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       ul2:1024:64:4:l # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               6 # l2 data cache hit latency (in cycles)
-cache:il1       il1:512:32:1:l # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               6 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         18 2 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
count = 84

sim: ** simulation statistics **
sim_num_insn               30674366 # total number of instructions committed
sim_num_refs               10460419 # total number of loads and stores committed
sim_num_loads               5738822 # total number of loads committed
sim_num_stores         4721597.0000 # total number of stores committed
sim_num_branches            5130203 # total number of branches committed
sim_elapsed_time                 32 # total simulation time in seconds
sim_inst_rate           958573.9375 # simulation speed (in insts/sec)
sim_total_insn             34742923 # total number of instructions executed
sim_total_refs             11962981 # total number of loads and stores executed
sim_total_loads             6794436 # total number of loads executed
sim_total_stores       5168545.0000 # total number of stores executed
sim_total_branches          5572605 # total number of branches executed
sim_cycle                  48850249 # total simulation time in cycles
sim_IPC                      0.6279 # instructions per cycle
sim_CPI                      1.5925 # cycles per instruction
sim_exec_BW                  0.7112 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.9792 # instruction per branch
IFQ_count                  38569264 # cumulative IFQ occupancy
IFQ_fcount                 38569264 # cumulative IFQ full count
ifq_occupancy                0.7895 # avg IFQ occupancy (insn's)
ifq_rate                     0.7112 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.1101 # avg IFQ occupant latency (cycle's)
ifq_full                     0.7895 # fraction of time (cycle's) IFQ was full
RUU_count                 177497170 # cumulative RUU occupancy
RUU_fcount                        0 # cumulative RUU full count
ruu_occupancy                3.6335 # avg RUU occupancy (insn's)
ruu_rate                     0.7112 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  5.1089 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                  50843175 # cumulative LSQ occupancy
LSQ_fcount                   121711 # cumulative LSQ full count
lsq_occupancy                1.0408 # avg LSQ occupancy (insn's)
lsq_rate                     0.7112 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  1.4634 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0025 # fraction of time (cycle's) LSQ was full
sim_slip                  260739410 # total number of slip cycles
avg_sim_slip                 8.5002 # the average slip between issue and retirement
bpred_nottaken.lookups      6465362 # total number of bpred lookups
bpred_nottaken.updates      5130203 # total number of updates
bpred_nottaken.addr_hits      1791088 # total number of address-predicted hits
bpred_nottaken.dir_hits      1791088 # total number of direction-predicted hits (includes addr-hits)
bpred_nottaken.misses       3339115 # total number of misses
bpred_nottaken.jr_hits          177 # total number of address-predicted hits for JR's
bpred_nottaken.jr_seen       460674 # total number of JR's seen
bpred_nottaken.jr_non_ras_hits.PP          177 # total number of address-predicted hits for non-RAS JR's
bpred_nottaken.jr_non_ras_seen.PP       460674 # total number of non-RAS JR's seen
bpred_nottaken.bpred_addr_rate    0.3491 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_nottaken.bpred_dir_rate    0.3491 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_nottaken.bpred_jr_rate    0.0004 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_nottaken.bpred_jr_non_ras_rate.PP    0.0004 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_nottaken.retstack_pushes            0 # total number of address pushed onto ret-addr stack
bpred_nottaken.retstack_pops            0 # total number of address popped off of ret-addr stack
bpred_nottaken.used_ras.PP            0 # total number of RAS predictions used
bpred_nottaken.ras_hits.PP            0 # total number of RAS hits
bpred_nottaken.ras_rate.PP <error: divide by zero> # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses               38119816 # total number of accesses
il1.hits                   38075192 # total number of hits
il1.misses                    44624 # total number of misses
il1.replacements              44112 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0012 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0012 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               10372893 # total number of accesses
dl1.hits                   10314588 # total number of hits
dl1.misses                    58305 # total number of misses
dl1.replacements              57793 # total number of replacements
dl1.writebacks                21565 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0056 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0056 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0021 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
ul2.accesses                 124494 # total number of accesses
ul2.hits                     120272 # total number of hits
ul2.misses                     4222 # total number of misses
ul2.replacements                466 # total number of replacements
ul2.writebacks                  153 # total number of writebacks
ul2.invalidations                 0 # total number of invalidations
ul2.miss_rate                0.0339 # miss rate (i.e., misses/ref)
ul2.repl_rate                0.0037 # replacement rate (i.e., repls/ref)
ul2.wb_rate                  0.0012 # writeback rate (i.e., wrbks/ref)
ul2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              38119816 # total number of accesses
itlb.hits                  38119781 # total number of hits
itlb.misses                      35 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              10503364 # total number of accesses
dtlb.hits                  10503310 # total number of hits
dtlb.misses                      54 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           30139888.7968 # total power usage of rename unit
bpred_power            220955850.6058 # total power usage of bpred unit
window_power           453245907.6193 # total power usage of instruction window
lsq_power              97385624.8793 # total power usage of load/store queue
regfile_power          174516151.8580 # total power usage of arch. regfile
icache_power           138084550.5832 # total power usage of icache
dcache_power           300031338.2947 # total power usage of dcache
dcache2_power          206453407.7170 # total power usage of dcache2
alu_power              925281135.9244 # total power usage of alu
falu_power             697632602.1377 # total power usage of falu
resultbus_power        265111823.1695 # total power usage of resultbus
clock_power            1408015201.2801 # total power usage of clock
avg_rename_power             0.6170 # avg power usage of rename unit
avg_bpred_power              4.5231 # avg power usage of bpred unit
avg_window_power             9.2783 # avg power usage of instruction window
avg_lsq_power                1.9936 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             2.8267 # avg power usage of icache
avg_dcache_power             6.1419 # avg power usage of dcache
avg_dcache2_power            4.2263 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          5.4270 # avg power usage of resultbus
avg_clock_power             28.8231 # avg power usage of clock
fetch_stage_power      359040401.1890 # total power usage of fetch stage
dispatch_stage_power   30139888.7968 # total power usage of dispatch stage
issue_stage_power      2247509237.6041 # total power usage of issue stage
avg_fetch_power              7.3498 # average power of fetch unit per cycle
avg_dispatch_power           0.6170 # average power of dispatch unit per cycle
avg_issue_power             46.0081 # average power of issue unit per cycle
total_power            4219220880.7280 # total power per cycle
avg_total_power_cycle       86.3705 # average total power per cycle
avg_total_power_cycle_nofp_nod2      67.8632 # average total power per cycle
avg_total_power_insn       121.4412 # average total power per insn
avg_total_power_insn_nofp_nod2      95.4190 # average total power per insn
rename_power_cc1       21359765.6412 # total power usage of rename unit_cc1
bpred_power_cc1        23056512.4186 # total power usage of bpred unit_cc1
window_power_cc1       300557102.4903 # total power usage of instruction window_cc1
lsq_power_cc1          7600935.8667 # total power usage of lsq_cc1
regfile_power_cc1      107701617.5332 # total power usage of arch. regfile_cc1
icache_power_cc1       107752934.0970 # total power usage of icache_cc1
dcache_power_cc1       59439338.4401 # total power usage of dcache_cc1
dcache2_power_cc1       433642.9235 # total power usage of dcache2_cc1
alu_power_cc1          133634427.2528 # total power usage of alu_cc1
resultbus_power_cc1    143033520.8474 # total power usage of resultbus_cc1
clock_power_cc1        502626091.0301 # total power usage of clock_cc1
avg_rename_power_cc1         0.4372 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.4720 # avg power usage of bpred unit_cc1
avg_window_power_cc1         6.1526 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.1556 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.2047 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         2.2058 # avg power usage of icache_cc1
avg_dcache_power_cc1         1.2168 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0089 # avg power usage of dcache2_cc1
avg_alu_power_cc1            2.7356 # avg power usage of alu_cc1
avg_resultbus_power_cc1       2.9280 # avg power usage of resultbus_cc1
avg_clock_power_cc1         10.2891 # avg power usage of clock_cc1
fetch_stage_power_cc1  130809446.5156 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 21359765.6412 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  644698967.8209 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.6778 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.4372 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         13.1975 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  1407195888.5410 # total power per cycle_cc1
avg_total_power_cycle_cc1      28.8063 # average total power per cycle_cc1
avg_total_power_insn_cc1      40.5031 # average total power per insn_cc1
rename_power_cc2       5339941.4103 # total power usage of rename unit_cc2
bpred_power_cc2        11602278.3036 # total power usage of bpred unit_cc2
window_power_cc2       110671179.0868 # total power usage of instruction window_cc2
lsq_power_cc2          3878841.1764 # total power usage of lsq_cc2
regfile_power_cc2      14759847.2618 # total power usage of arch. regfile_cc2
icache_power_cc2       107752934.0970 # total power usage of icache_cc2
dcache_power_cc2       31854422.7673 # total power usage of dcache_cc2
dcache2_power_cc2       263071.4382 # total power usage of dcache2_cc2
alu_power_cc2          36791189.5551 # total power usage of alu_cc2
resultbus_power_cc2    43390084.0757 # total power usage of resultbus_cc2
clock_power_cc2        202447253.7426 # total power usage of clock_cc2
avg_rename_power_cc2         0.1093 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.2375 # avg power usage of bpred unit_cc2
avg_window_power_cc2         2.2655 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0794 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.3021 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         2.2058 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.6521 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0054 # avg power usage of dcache2_cc2
avg_alu_power_cc2            0.7531 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.8882 # avg power usage of resultbus_cc2
avg_clock_power_cc2          4.1442 # avg power usage of clock_cc2
fetch_stage_power_cc2  119355212.4006 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 5339941.4103 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  226848788.0996 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.4433 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1093 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          4.6438 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  568751042.9148 # total power per cycle_cc2
avg_total_power_cycle_cc2      11.6427 # average total power per cycle_cc2
avg_total_power_insn_cc2      16.3703 # average total power per insn_cc2
rename_power_cc3       6217953.7256 # total power usage of rename unit_cc3
bpred_power_cc3        31392232.2770 # total power usage of bpred unit_cc3
window_power_cc3       123971330.3586 # total power usage of instruction window_cc3
lsq_power_cc3          12616549.8503 # total power usage of lsq_cc3
regfile_power_cc3      20374615.9333 # total power usage of arch. regfile_cc3
icache_power_cc3       110786095.7446 # total power usage of icache_cc3
dcache_power_cc3       55913640.5266 # total power usage of dcache_cc3
dcache2_power_cc3      20865083.3934 # total power usage of dcache2_cc3
alu_power_cc3          115955860.1603 # total power usage of alu_cc3
resultbus_power_cc3    55452810.2385 # total power usage of resultbus_cc3
clock_power_cc3        291088821.6488 # total power usage of clock_cc3
avg_rename_power_cc3         0.1273 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.6426 # avg power usage of bpred unit_cc3
avg_window_power_cc3         2.5378 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2583 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.4171 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         2.2679 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.1446 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4271 # avg power usage of dcache2_cc3
avg_alu_power_cc3            2.3737 # avg power usage of alu_cc3
avg_resultbus_power_cc3       1.1352 # avg power usage of resultbus_cc3
avg_clock_power_cc3          5.9588 # avg power usage of clock_cc3
fetch_stage_power_cc3  142178328.0217 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 6217953.7256 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  384775274.5277 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.9105 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1273 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          7.8766 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  844634993.8571 # total power per cycle_cc3
avg_total_power_cycle_cc3      17.2903 # average total power per cycle_cc3
avg_total_power_insn_cc3      24.3110 # average total power per insn_cc3
total_rename_access        34619566 # total number accesses of rename unit
total_bpred_access          5130203 # total number accesses of bpred unit
total_window_access       126734239 # total number accesses of instruction window
total_lsq_access           10642293 # total number accesses of load/store queue
total_regfile_access       54721110 # total number accesses of arch. regfile
total_icache_access        38119816 # total number accesses of icache
total_dcache_access        10372893 # total number accesses of dcache
total_dcache2_access         124494 # total number accesses of dcache2
total_alu_access           31086635 # total number accesses of alu
total_resultbus_access     32303833 # total number accesses of resultbus
avg_rename_access            0.7087 # avg number accesses of rename unit
avg_bpred_access             0.1050 # avg number accesses of bpred unit
avg_window_access            2.5943 # avg number accesses of instruction window
avg_lsq_access               0.2179 # avg number accesses of lsq
avg_regfile_access           1.1202 # avg number accesses of arch. regfile
avg_icache_access            0.7803 # avg number accesses of icache
avg_dcache_access            0.2123 # avg number accesses of dcache
avg_dcache2_access           0.0025 # avg number accesses of dcache2
avg_alu_access               0.6364 # avg number accesses of alu
avg_resultbus_access         0.6613 # avg number accesses of resultbus
max_rename_access                 1 # max number accesses of rename unit
max_bpred_access                  3 # max number accesses of bpred unit
max_window_access                10 # max number accesses of instruction window
max_lsq_access                    4 # max number accesses of load/store queue
max_regfile_access                6 # max number accesses of arch. regfile
max_icache_access                 1 # max number accesses of icache
max_dcache_access                 3 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              7 # max number accesses of resultbus
max_cycle_power_cc1         58.6545 # maximum cycle power usage of cc1
max_cycle_power_cc2         35.0932 # maximum cycle power usage of cc2
max_cycle_power_cc3         38.4503 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base             0x00400000 # program text (code) segment base
ld_text_size                 155952 # program text (code) size in bytes
ld_data_base             0x10000000 # program initialized data segment base
ld_data_size                  16384 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base            0x7fffc000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry            0x00400140 # program entry point (initial PC)
ld_environ_base          0x7fff8000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                   93 # total number of pages allocated
mem.page_mem                   372k # total size of memory pages allocated
mem.ptab_misses                  95 # total first level page table misses
mem.ptab_accesses         239396384 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate


Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 4
  Block Size (bytes): 8

Access Time: 9.27925e-09
Cycle Time:  1.09081e-08

Best Ndwl (L1): 8
Best Ndbl (L1): 1
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 8.44162
 tag side (ns): 8.55667
 decode_data (ns): 5.29318
 wordline_data (ns): 1.03507
 bitline_data (ns): 0.810785
 sense_amp_data (ns): 0.58
 decode_tag (ns): 2.37065
 wordline_tag (ns): 1.36749
 bitline_tag (ns): 0.158246
 sense_amp_tag (ns): 0.26
 compare (ns): 2.42991
 mux driver (ns): 1.6125
 sel inverter (ns): 0.357877
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 7.71904
 total tag path is set assoc (ns): 8.55667
 precharge time (ns): 1.6289

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 512
  Associativity: 1
  Block Size (bytes): 32

Access Time: 6.15176e-09
Cycle Time:  8.05494e-09

Best Ndwl (L1): 2
Best Ndbl (L1): 4
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 2

Time Components:
 data side (with Output driver) (ns): 6.14931
 tag side (ns): 6.15176
 decode_data (ns): 3.35254
 wordline_data (ns): 1.30935
 bitline_data (ns): 0.184839
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.84499
 wordline_tag (ns): 0.847457
 bitline_tag (ns): 0.250732
 sense_amp_tag (ns): 0.26
 compare (ns): 2.36506
 valid signal driver (ns): 0.583518
 data output driver (ns): 0.722579
 total data path (with output driver) (ns): 5.42673
 total tag path is dm (ns): 6.15176
 precharge time (ns): 1.90318

Cache Parameters:
  Size in bytes: 16384
  Number of sets: 128
  Associativity: 4
  Block Size (bytes): 32

Access Time: 9.14093e-09
Cycle Time:  1.11718e-08

Best Ndwl (L1): 4
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 2
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 6.05114
 tag side (ns): 7.98848
 decode_data (ns): 2.92572
 wordline_data (ns): 1.437
 bitline_data (ns): -0.0440331
 sense_amp_data (ns): 0.58
 decode_tag (ns): 1.46851
 wordline_tag (ns): 1.27791
 bitline_tag (ns): -0.0315811
 sense_amp_tag (ns): 0.26
 compare (ns): 2.29478
 mux driver (ns): 2.37376
 sel inverter (ns): 0.345094
 data output driver (ns): 1.15245
 total data path (with output driver) (ns): 4.89869
 total tag path is set assoc (ns): 7.98848
 precharge time (ns): 2.03083

Cache Parameters:
  Size in bytes: 262144
  Number of sets: 1024
  Associativity: 4
  Block Size (bytes): 64

Access Time: 1.44948e-08
Cycle Time:  1.76863e-08

Best Ndwl (L1): 2
Best Ndbl (L1): 2
Best Nspd (L1): 1
Best Ntwl (L1): 1
Best Ntbl (L1): 4
Best Ntspd (L1): 1

Time Components:
 data side (with Output driver) (ns): 11.3269
 tag side (ns): 12.2049
 decode_data (ns): 4.99158
 wordline_data (ns): 2.59771
 bitline_data (ns): 0.867749
 sense_amp_data (ns): 0.58
 decode_tag (ns): 4.52586
 wordline_tag (ns): 1.24192
 bitline_tag (ns): 0.46158
 sense_amp_tag (ns): 0.26
 compare (ns): 2.17054
 mux driver (ns): 3.21212
 sel inverter (ns): 0.332908
 data output driver (ns): 2.28987
 total data path (with output driver) (ns): 9.03704
 total tag path is set assoc (ns): 12.2049
 precharge time (ns): 3.19154
